<ResourceDictionary
  xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
  xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
  xmlns:micro="http://www.caliburnproject.org">

  <Style
    x:Key="ChainedParameterCommandBase"
    TargetType="{x:Type MenuItem}">
    <Setter
      Property="HorizontalContentAlignment"
      Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
    <Setter
      Property="VerticalContentAlignment"
      Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
    <Setter
      Property="RenderOptions.ClearTypeHint"
      Value="Enabled" />
    <Setter
      Property="Background"
      Value="{DynamicResource TransparentWhiteBrush}" />
    <Setter
      Property="Foreground"
      Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
    <Setter
      Property="ScrollViewer.PanningMode"
      Value="Both" />
    <Setter
      Property="Stylus.IsFlicksEnabled"
      Value="False" />
    <Setter
      Property="Template"
      Value="{DynamicResource {ComponentResourceKey ResourceId=SubmenuItemTemplateKey, TypeInTargetAssembly={x:Type MenuItem}}}" />
    <Style.Triggers>
      <Trigger
        Property="Role"
        Value="TopLevelHeader">
        <Setter
          Property="Padding"
          Value="0" />
        <Setter
          Property="Template"
          Value="{DynamicResource {ComponentResourceKey ResourceId=MenuTemplateKey, TypeInTargetAssembly={x:Type MenuItem}}}" />
      </Trigger>
      <Trigger
        Property="Role"
        Value="TopLevelItem">
        <Setter
          Property="Padding"
          Value="0" />
        <Setter
          Property="Template"
          Value="{DynamicResource {ComponentResourceKey ResourceId=EmptySubitemListTemplateKey, TypeInTargetAssembly={x:Type MenuItem}}}" />
      </Trigger>
      <Trigger
        Property="Role"
        Value="SubmenuHeader">
        <Setter
          Property="Padding"
          Value="2,6,2,6" />
        <Setter
          Property="Template"
          Value="{DynamicResource {ComponentResourceKey ResourceId=SubmenuHeaderTemplateKey, TypeInTargetAssembly={x:Type MenuItem}}}" />
      </Trigger>
      <Trigger
        Property="Role"
        Value="SubmenuItem">
        <Setter
          Property="Padding"
          Value="2,6,2,6" />
      </Trigger>
    </Style.Triggers>
  </Style>

  <Style
    x:Key="ChainedParameterMenuButton"
    TargetType="Menu"
    BasedOn="{StaticResource MetroMenu}">

    <Setter
      Property="HorizontalAlignment"
      Value="Right" />

    <Setter
      Property="VerticalAlignment"
      Value="Center" />

    <Setter
      Property="Background"
      Value="{DynamicResource TransparentWhiteBrush}" />

  </Style>

  <DataTemplate
    x:Key="AddIcon">
    <Rectangle
      Width="20"
      Height="20"
      Margin="2"
      HorizontalAlignment="Center"
        Fill="{Binding Path=Foreground, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type MenuItem}}}">
      <Rectangle.OpacityMask>
        <VisualBrush
            Stretch="Uniform"
            Visual="{DynamicResource appbar_add}" />
      </Rectangle.OpacityMask>
    </Rectangle>

  </DataTemplate>

  <Style
    x:Key="ChainedParameterMenuItem"
    TargetType="{x:Type MenuItem}"
    BasedOn="{StaticResource ChainedParameterCommandBase}">

    <Style.Setters>

      <Setter
        Property="Header"
        Value="{Binding Path=Value}" />

      <Setter
        Property="ItemsSource"
        Value="{Binding ValuesForNextParameter}" />

      <Setter
        Property="micro:Message.Attach"
        Value="[Action GetChosen()]" />

    </Style.Setters>

  </Style>

  <Style
    x:Key="ChainedParameterCommandMenu"
    TargetType="{x:Type MenuItem}"
    BasedOn="{StaticResource ChainedParameterCommandBase}">

    <Style.Setters>

      <Setter
        Property="HeaderTemplate"
        Value="{StaticResource AddIcon}" />

      <Setter
        Property="ItemsSource"
        Value="{Binding ValuesForFirstParameter}" />

      <Setter
        Property="ItemContainerStyle"
        Value="{StaticResource ChainedParameterMenuItem}" />

    </Style.Setters>

  </Style>

  <Style
    x:Key="ChainedParameter"
    TargetType="{x:Type MenuItem}"
    BasedOn="{StaticResource ChainedParameterCommandBase}">

    <Style.Setters>

      <Setter
        Property="Header"
        Value="{Binding Path=Value}" />

      <Setter
        Property="ItemsSource"
        Value="{Binding NextParameterValues}" />

    </Style.Setters>

    <Style.Triggers>

      <DataTrigger
        Value="True"
        Binding="{Binding IsTerminal}">
        <Setter
          Property="micro:Message.Attach"
          Value="[Action Choose()]" />
      </DataTrigger>

      <DataTrigger
        Value="False"
        Binding="{Binding IsTerminal}">
        <Setter
          Property="micro:Message.Attach"
          Value="[Event GotFocus] = [Choose()]" />
      </DataTrigger>

    </Style.Triggers>

  </Style>

  <Style
    x:Key="ChainedParameterCommand"
    TargetType="{x:Type MenuItem}"
    BasedOn="{StaticResource ChainedParameterCommandBase}">

    <Style.Setters>

      <Setter
        Property="HeaderTemplate"
        Value="{StaticResource AddIcon}" />

      <Setter
        Property="ItemsSource"
        Value="{Binding ValuesForFirstParameter}" />

      <Setter
        Property="ItemContainerStyle"
        Value="{StaticResource ChainedParameter}" />

    </Style.Setters>

  </Style>

  <ControlTemplate
    x:Key="{ComponentResourceKey ResourceId=MenuTemplateKey, TypeInTargetAssembly={x:Type MenuItem}}"
    TargetType="{x:Type MenuItem}">
    <Grid
      Margin="1"
      SnapsToDevicePixels="True">
      <ContentPresenter
        x:Name="contentPresenter"
        Margin="{TemplateBinding Padding}"
        ContentSource="Header"
        RecognizesAccessKey="True"
        SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
      <Popup
        x:Name="PART_Popup"
        AllowsTransparency="True"
        Focusable="False"
        HorizontalOffset="1"
        IsOpen="{Binding IsSubmenuOpen, RelativeSource={RelativeSource TemplatedParent}}"
        PopupAnimation="{DynamicResource {x:Static SystemParameters.MenuPopupAnimationKey}}"
        Placement="Bottom"
        VerticalOffset="-1">
        <Grid>
          <Rectangle
            x:Name="LayoutRoot"
            Fill="{TemplateBinding Background}" />
          <ContentControl
            x:Name="SubMenuBorder"
            IsTabStop="False"
            Template="{DynamicResource {ComponentResourceKey ResourceId=SubmenuContent, TypeInTargetAssembly={x:Type FrameworkElement}}}">
            <ScrollViewer
              x:Name="SubMenuScrollViewer"
              CanContentScroll="True"
              Style="{DynamicResource {ComponentResourceKey ResourceId=MenuScrollViewer, TypeInTargetAssembly={x:Type FrameworkElement}}}">
              <ItemsPresenter
                x:Name="ItemsPresenter"
                Margin="0"
                KeyboardNavigation.DirectionalNavigation="Cycle"
                Grid.IsSharedSizeScope="True"
                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                KeyboardNavigation.TabNavigation="Cycle" />
            </ScrollViewer>
          </ContentControl>
        </Grid>
      </Popup>
    </Grid>
    <ControlTemplate.Triggers>
      <Trigger
        Property="IsSuspendingPopupAnimation"
        Value="True">
        <Setter
          TargetName="PART_Popup"
          Property="PopupAnimation"
          Value="None" />
      </Trigger>
      <Trigger
        Property="HasDropShadow"
        Value="True"
        SourceName="PART_Popup">
        <Setter
          TargetName="LayoutRoot"
          Property="Effect">
          <Setter.Value>
            <DropShadowEffect
              Color="{DynamicResource MenuShadowColor}"
              BlurRadius="4"
              ShadowDepth="2"
              Direction="315"
              Opacity="0.3" />
          </Setter.Value>
        </Setter>
        <Setter
          TargetName="LayoutRoot"
          Property="Margin"
          Value="0,0,6,6" />
        <Setter
          TargetName="SubMenuBorder"
          Property="Margin"
          Value="0,0,6,6" />
      </Trigger>
      <Trigger
        Property="IsMouseOver"
        Value="True">
        <Setter
          TargetName="contentPresenter"
          Property="Opacity"
          Value="1" />
      </Trigger>
      <Trigger
        Property="IsMouseOver"
        Value="False">
        <Setter
          TargetName="contentPresenter"
          Property="Opacity"
          Value=".5" />
      </Trigger>
    </ControlTemplate.Triggers>
  </ControlTemplate>

  <ControlTemplate
    x:Key="{ComponentResourceKey ResourceId=EmptySubitemListTemplateKey, TypeInTargetAssembly={x:Type MenuItem}}"
    TargetType="{x:Type MenuItem}">
    <Grid
      Margin="1"
      SnapsToDevicePixels="True">
      <ContentPresenter
        x:Name="contentPresenter"
        Margin="{TemplateBinding Padding}"
        ContentSource="Header"
        RecognizesAccessKey="True"
        SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
        Opacity="0.5" />

    </Grid>
  </ControlTemplate>

</ResourceDictionary>