<ResourceDictionary
  xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
  xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
  xmlns:controls="clr-namespace:Emporer.Math.Distribution.UI.Controls;assembly=Emporer.Math.Distribution.UI"
  xmlns:controls1="http://metro.mahapps.com/winfx/xaml/controls"
  xmlns:converters="clr-namespace:Milan.Simulation.UI.Converters"
  xmlns:viewModels="clr-namespace:Milan.Simulation.UI.ViewModels"
  xmlns:wpf="http://www.gewissen-it.de/milan/wpf"
  xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
  xmlns:system="clr-namespace:System;assembly=mscorlib"
  xmlns:cal="http://www.caliburnproject.org">

  <converters:SimulationTicksToTimeSpanConverter
    x:Key="SimulationTicksToTimeSpan" />

  <DataTemplate
    x:Key="TimeSpanChooser">

    <wpf:TimeSpanChooser
      Value="{Binding Path=Value, Mode=TwoWay, Converter={StaticResource SimulationTicksToTimeSpan}}" />

  </DataTemplate>

  <DataTemplate
    x:Key="BatchSizeChooser">

    <controls1:NumericUpDown
      Value="{Binding Path=Value, Mode=TwoWay}"
      Minimum="0" />

  </DataTemplate>

  <DataTemplate
    x:Key="ProductTypeDurationDistributionItem">

    <Grid>

      <Grid.ColumnDefinitions>
        <ColumnDefinition />
        <ColumnDefinition
          Width="Auto" />
      </Grid.ColumnDefinitions>

      <Expander
        Grid.Column="0"
        Header="{Binding ProductType.Name}">

        <controls:DistributionSelector
          DataContext="{Binding Path=Distribution}"
          ValueTemplate="{StaticResource TimeSpanChooser}" />

      </Expander>

      <Button
        Grid.Column="1"
        VerticalAlignment="Center"
        Style="{StaticResource ChromelessButtonStyle}"
        Command="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ItemsControl}}, Path= DataContext.RemoveCommand}"
        CommandParameter="{Binding}">

        <Rectangle
          Width="20"
          Height="20"
          Margin="2"
          HorizontalAlignment="Center"
          Fill="{Binding Path=Foreground, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Button}}}">
          <Rectangle.OpacityMask>
            <VisualBrush
              Stretch="Uniform"
              Visual="{DynamicResource appbar_minus}" />
          </Rectangle.OpacityMask>
        </Rectangle>

      </Button>

    </Grid>

  </DataTemplate>

  <DataTemplate
    x:Key="ProductTypeNumberDistributionItem">

    <Grid>

      <Grid.ColumnDefinitions>
        <ColumnDefinition />
        <ColumnDefinition
          Width="Auto" />
      </Grid.ColumnDefinitions>

      <Expander
        Grid.Column="0"
        Header="{Binding ProductType.Name}">

        <controls:DistributionSelector
          DataContext="{Binding Path=Distribution}"
          ValueTemplate="{StaticResource BatchSizeChooser}" />

      </Expander>

      <Button
        Grid.Column="1"
        VerticalAlignment="Center"
        Style="{StaticResource ChromelessButtonStyle}"
        Command="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ItemsControl}}, Path= DataContext.RemoveCommand}"
        CommandParameter="{Binding}">

        <Rectangle
          Width="20"
          Height="20"
          Margin="2"
          HorizontalAlignment="Center"
          Fill="{Binding Path=Foreground, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Button}}}">
          <Rectangle.OpacityMask>
            <VisualBrush
              Stretch="Uniform"
              Visual="{DynamicResource appbar_minus}" />
          </Rectangle.OpacityMask>
        </Rectangle>
      </Button>

    </Grid>

  </DataTemplate>

  <DataTemplate
    DataType="{x:Type viewModels:ProductTypeAmountEditorViewModel}">

    <Expander
      Header="{Binding ProductType.Name}">

      <controls1:NumericUpDown
        Value="{Binding Path=Amount,Mode=TwoWay}" />

    </Expander>

  </DataTemplate>

  <DataTemplate
    x:Key="RemovableItem">

    <Grid>

      <Grid.ColumnDefinitions>
        <ColumnDefinition />
        <ColumnDefinition
          Width="Auto" />
      </Grid.ColumnDefinitions>

      <ContentControl
        Grid.Column="0"
        HorizontalAlignment="Stretch"
        Content="{Binding}" />

      <Button
        Grid.Column="1"
        VerticalAlignment="Center"
        Style="{StaticResource ChromelessButtonStyle}"
        Command="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ItemsControl}}, Path= DataContext.RemoveCommand}"
        CommandParameter="{Binding}">

        <Rectangle
          Width="20"
          Height="20"
          Margin="2"
          HorizontalAlignment="Center"
          Fill="{Binding Path=Foreground, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Button}}}">
          <Rectangle.OpacityMask>
            <VisualBrush
              Stretch="Uniform"
              Visual="{DynamicResource appbar_minus}" />
          </Rectangle.OpacityMask>
        </Rectangle>

      </Button>

    </Grid>

  </DataTemplate>

  <DataTemplate
    DataType="{x:Type viewModels:ProductTypeViewModel}">

    <TextBlock
      Margin="0 3 0 3"
      Text="{Binding Name}"
      Style="{StaticResource Normal}" />

  </DataTemplate>

  <DataTemplate
    x:Key="NamedItem">

    <Grid>

      <Grid.ColumnDefinitions>
        <ColumnDefinition />
        <ColumnDefinition
          Width="Auto" />
      </Grid.ColumnDefinitions>

      <ContentControl
        Grid.Column="0"
        HorizontalAlignment="Stretch"
        Content="{Binding Name}" />

      <Button
        Grid.Column="1"
        VerticalAlignment="Center"
        Style="{StaticResource ChromelessButtonStyle}"
        Command="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ItemsControl}}, Path= DataContext.RemoveCommand}"
        CommandParameter="{Binding}">

        <Rectangle
          Width="20"
          Height="20"
          Margin="2"
          HorizontalAlignment="Center"
          Fill="{Binding Path=Foreground, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Button}}}">
          <Rectangle.OpacityMask>
            <VisualBrush
              Stretch="Uniform"
              Visual="{DynamicResource appbar_minus}" />
          </Rectangle.OpacityMask>
        </Rectangle>

      </Button>

    </Grid>

  </DataTemplate>

  <DataTemplate
    x:Key="ConnectionItem">

    <Grid>

      <Grid.ColumnDefinitions>
        <ColumnDefinition
          Width="*" />
        <ColumnDefinition
          Width="Auto" />
      </Grid.ColumnDefinitions>

      <Expander
        Grid.Column="0"
        Header="{Binding Destination.Name}">

        <Grid>

          <Grid.RowDefinitions>

            <RowDefinition
              Height="Auto" />
            <RowDefinition
              Height="Auto" />
            <RowDefinition
              Height="Auto" />
            <RowDefinition
              Height="Auto" />
            <RowDefinition
              Height="Auto" />
          </Grid.RowDefinitions>

          <Label
            Grid.Row="0"
            Content="Priority"
            Style="{StaticResource PropertyHeader}" />

          <controls1:NumericUpDown
            Grid.Row="1"
            Minimum="0"
            Value="{Binding Path=Priority}" />

          <controls1:ToggleSwitch
            Grid.Row="2"
            OnLabel="Route only certain product types"
            OffLabel="Route all kinds of products"
            IsChecked="{Binding Path=IsRoutingPerProductType,Mode=TwoWay}" />

          <ItemsControl
            Grid.Row="3"
            Visibility="{Binding IsRoutingPerProductType, Converter={StaticResource BoolToVisibility}}"
            ItemsSource="{Binding RoutedProductTypes}"
            ItemTemplate="{StaticResource NamedItem}">
            <i:Interaction.Behaviors>
              <wpf:IgnoreMouseWheelBehavior />
            </i:Interaction.Behaviors>
          </ItemsControl>

          <Menu
            Grid.Row="4"
            Visibility="{Binding IsRoutingPerProductType, Converter={StaticResource BoolToVisibility}}"
            ItemsSource="{Binding AddProductTypeCommand, Converter={StaticResource SingleObjectToArray}}"
            ItemContainerStyle="{StaticResource ChainedParameterCommandMenu}"
            Style="{StaticResource ChainedParameterMenuButton}" />

        </Grid>

      </Expander>

      <Button
        Grid.Column="1"
        VerticalAlignment="Center"
        Style="{StaticResource ChromelessButtonStyle}"
        Command="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ItemsControl}}, Path= DataContext.RemoveCommand}"
        CommandParameter="{Binding}">

        <Rectangle
          Width="20"
          Height="20"
          Margin="2"
          HorizontalAlignment="Center"
          Fill="{Binding Path=Foreground, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Button}}}">
          <Rectangle.OpacityMask>
            <VisualBrush
              Stretch="Uniform"
              Visual="{DynamicResource appbar_minus}" />
          </Rectangle.OpacityMask>
        </Rectangle>

      </Button>

    </Grid>

  </DataTemplate>

  <wpf:Multiply
    x:Key="Multiply" />

  <!-- the header template -->
  <DataTemplate
    x:Key="SectionHeading">

    <Border
      Padding="24 0 24 6">

      <TextBlock
        x:Name="SectionHeader"
        Text="{Binding DisplayName}"
        Style="{StaticResource Heading}"
        TextWrapping="NoWrap"
        TextTrimming="CharacterEllipsis" />

    </Border>

  </DataTemplate>

  <!-- the content template (ContentControl with Caliburn.Micro view resolution) -->
  <DataTemplate
    x:Key="SectionContent">

    <ContentControl
      cal:View.Model="{Binding}"
      Margin="12" />

  </DataTemplate>

  <!-- an invisible togglebutton (the header click area) -->
  <ControlTemplate
    x:Key="Invisible"
    TargetType="ToggleButton">

    <ContentPresenter />

  </ControlTemplate>

  <!-- a chromeless expander (only a header and a content area, no frame, butons, etc)-->
  <ControlTemplate
    x:Key="PropertyEditorSectionExpander"
    TargetType="{x:Type Expander}">

    <StackPanel>

      <ToggleButton
        x:Name="HeaderArea"
        IsChecked="{Binding IsExpanded, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
        Template="{StaticResource Invisible}"
        Margin="0"
        Padding="0">

        <Border
          Background="{TemplateBinding Background}"
          VerticalAlignment="Stretch">
          <ContentPresenter
            ContentSource="Header"
            VerticalAlignment="Stretch" />

        </Border>

      </ToggleButton>

      <Border
        Background="{DynamicResource AccentColorBrush4}"
        BorderThickness="0"
        Margin="0">

        <Grid
          x:Name="ExpandSiteContainer"
          Visibility="Visible"
          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
          Margin="{TemplateBinding Padding}"
          VerticalAlignment="{TemplateBinding VerticalContentAlignment}">

          <Grid.Height>
            <MultiBinding
              Converter="{StaticResource Multiply}">
              <Binding
                Path="ActualHeight"
                ElementName="ExpandSite" />
              <Binding
                Path="Tag"
                RelativeSource="{RelativeSource Self}" />
            </MultiBinding>
          </Grid.Height>
          <Grid.Tag>
            <system:Double>0.0</system:Double>
          </Grid.Tag>
          <ScrollViewer
            VerticalScrollBarVisibility="Hidden"
            HorizontalScrollBarVisibility="Hidden">
            <ContentPresenter
              x:Name="ExpandSite"
              Focusable="false"
              VerticalAlignment="Top" />
          </ScrollViewer>
        </Grid>
      </Border>
    </StackPanel>

    <ControlTemplate.Triggers>

      <Trigger
        Property="IsExpanded"
        Value="true">
        <Trigger.EnterActions>
          <BeginStoryboard>
            <Storyboard>
              <DoubleAnimation
                Storyboard.TargetName="ExpandSiteContainer"
                Storyboard.TargetProperty="Tag"
                To="1.0"
                Duration="0:0:0.25" />
            </Storyboard>
          </BeginStoryboard>
        </Trigger.EnterActions>
        <Trigger.ExitActions>
          <BeginStoryboard>
            <Storyboard>
              <DoubleAnimation
                Storyboard.TargetName="ExpandSiteContainer"
                Storyboard.TargetProperty="Tag"
                To="0"
                Duration="0:0:0.25" />
            </Storyboard>
          </BeginStoryboard>
        </Trigger.ExitActions>
      </Trigger>

      <Trigger
        Property="IsEnabled"
        Value="false">

        <Setter
          Property="Foreground"
          Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />

      </Trigger>

    </ControlTemplate.Triggers>
  </ControlTemplate>

  <!-- the listbox item style (uses the expander, specifies selection visuals) -->
  <Style
    x:Key="SectionItem"
    TargetType="ListBoxItem">

    <Setter
      Property="Template">
      <Setter.Value>
        <ControlTemplate
          TargetType="{x:Type ListBoxItem}">

          <Expander
            x:Name="SectionExpander"
            IsExpanded="{Binding IsSelected, RelativeSource={RelativeSource TemplatedParent}}"
            Header="{Binding DataContext, RelativeSource={RelativeSource TemplatedParent}}"
            HeaderTemplate="{StaticResource SectionHeading}"
            Template="{StaticResource PropertyEditorSectionExpander}"
            Background="Transparent"
            Margin="0"
            Padding="0">

            <!-- here is the actual section view displayed (if its active)-->
            <ContentPresenter />

          </Expander>

          <ControlTemplate.Triggers>
            <!-- change the background when selected -->
            <Trigger
              Property="IsSelected"
              Value="True">
              <Setter
                TargetName="SectionExpander"
                Property="Background"
                Value="{DynamicResource AccentColorBrush}" />
            </Trigger>
          </ControlTemplate.Triggers>

        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <Style
    x:Key="DescriptionTextBox"
    TargetType="TextBox">

    <Setter
      Property="Margin"
      Value="24 12 12 12" />

    <Setter
      Property="controls1:TextBoxHelper.Watermark"
      Value="Description" />

    <Setter
      Property="HorizontalAlignment"
      Value="Stretch" />

    <Setter
      Property="TextWrapping"
      Value="Wrap" />

  </Style>

  <Style
    x:Key="PropertySectionsListBox"
    TargetType="ListBox">

    <Setter
      Property="Margin"
      Value="0" />
    <Setter
      Property="BorderThickness"
      Value="0" />
    <Setter
      Property="Background"
      Value="Transparent" />
    <Setter
      Property="ScrollViewer.HorizontalScrollBarVisibility"
      Value="Disabled" />
    <Setter
      Property="ScrollViewer.VerticalScrollBarVisibility"
      Value="Disabled" />
    <Setter
      Property="ItemTemplate"
      Value="{StaticResource SectionContent}" />
    <Setter
      Property="ItemContainerStyle"
      Value="{StaticResource SectionItem}" />


  </Style>

</ResourceDictionary>