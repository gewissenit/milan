<ResourceDictionary
  xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
  xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
  xmlns:system="clr-namespace:System;assembly=mscorlib">

  <LinearGradientBrush
    x:Key="BeginsBeforeIndicatorBrush"
    StartPoint="0,0"
    EndPoint="1,0">
    <GradientStop
      Offset="0.2"
      Color="Transparent" />
    <GradientStop
      Offset="0.8"
      Color="{DynamicResource Gray2}" />
  </LinearGradientBrush>

  <LinearGradientBrush
    x:Key="EndsAfterIndicatorBrush"
    StartPoint="0,0"
    EndPoint="1,0">
    <GradientStop
      Offset="0.2"
      Color="{DynamicResource Gray2}" />
    <GradientStop
      Offset="0.8"
      Color="Transparent" />
  </LinearGradientBrush>

  <LinearGradientBrush
    x:Key="BeginsBeforeIndicatorBrushSelected"
    StartPoint="0,0"
    EndPoint="1,0">
    <GradientStop
      Offset="0.2"
      Color="#00D80073" />
    <GradientStop
      Offset="0.8"
      Color="{DynamicResource HighlightColor}" />
  </LinearGradientBrush>

  <LinearGradientBrush
    x:Key="EndsAfterIndicatorBrushSelected"
    StartPoint="0,0"
    EndPoint="1,0">
    <GradientStop
      Offset="0.2"
      Color="{DynamicResource HighlightColor}" />
    <GradientStop
      Offset="0.8"
      Color="#00D80073" />
  </LinearGradientBrush>

  <LinearGradientBrush
    x:Key="BeginsBeforeIndicatorBrushHover"
    StartPoint="0,0"
    EndPoint="1,0">
    <GradientStop
      Offset="0.2"
      Color="Transparent" />
    <GradientStop
      Offset="0.8"
      Color="{DynamicResource AccentColor}" />
  </LinearGradientBrush>

  <LinearGradientBrush
    x:Key="EndsAfterIndicatorBrushHover"
    StartPoint="0,0"
    EndPoint="1,0">
    <GradientStop
      Offset="0.2"
      Color="{DynamicResource AccentColor}" />
    <GradientStop
      Offset="0.8"
      Color="Transparent" />
  </LinearGradientBrush>

  <Style
    x:Key="DayHeaderText"
    TargetType="TextBlock"
    BasedOn="{StaticResource Small}">

    <Setter
      Property="VerticalAlignment"
      Value="Center" />

    <Setter
      Property="HorizontalAlignment"
      Value="Center" />

    <Setter
      Property="Margin"
      Value="3" />


  </Style>

  <Style
    x:Key="ShiftBarButtonStyle"
    TargetType="{x:Type Button}">
    <Setter
      Property="Template">

      <Setter.Value>

        <ControlTemplate
          TargetType="{x:Type Button}">

          <Grid>

            <Rectangle
              Width="{TemplateBinding Width}"
              Height="{TemplateBinding Height}"
              DataContext="{TemplateBinding DataContext}">

              <Rectangle.Style>

                <Style
                  TargetType="{x:Type Rectangle}">

                  <Setter
                    Property="Fill"
                    Value="{DynamicResource GrayBrush2}" />

                  <Style.Triggers>

                    <Trigger
                      Property="IsMouseOver"
                      Value="True">

                      <Setter
                        Property="Fill"
                        Value="{DynamicResource AccentColorBrush}" />

                    </Trigger>

                    <DataTrigger
                      Value="True"
                      Binding="{Binding IsSelected}">

                      <Setter
                        Property="Fill"
                        Value="{DynamicResource HighlightBrush}" />

                    </DataTrigger>

                  </Style.Triggers>

                </Style>

              </Rectangle.Style>

            </Rectangle>

          </Grid>

        </ControlTemplate>

      </Setter.Value>

    </Setter>

  </Style>

  <Style
    x:Key="IndicatorStyle"
    TargetType="Border">

    <Setter
      Property="Background"
      Value="Transparent" />

  </Style>

  <Style
    x:Key="BeginsBeforeIndicatorStyle"
    BasedOn="{StaticResource IndicatorStyle}"
    TargetType="Border">

    <Style.Triggers>

      <Trigger
        Property="IsMouseOver"
        Value="True">

        <Setter
          Property="Background"
          Value="{DynamicResource BeginsBeforeIndicatorBrushHover}" />

      </Trigger>

      <DataTrigger
        Value="True"
        Binding="{Binding BeginsBeforeVisualizedDay}">

        <Setter
          Property="Background"
          Value="{StaticResource BeginsBeforeIndicatorBrush}" />

      </DataTrigger>

      <DataTrigger
        Value="True">

        <DataTrigger.Binding>

          <MultiBinding
            Converter="{StaticResource LogicalAnd}">

            <Binding
              Path="IsSelected" />

            <Binding
              Path="BeginsBeforeVisualizedDay" />

          </MultiBinding>

        </DataTrigger.Binding>

        <Setter
          Property="Background"
          Value="{StaticResource BeginsBeforeIndicatorBrushSelected}" />

      </DataTrigger>

    </Style.Triggers>

  </Style>

  <Style
    x:Key="EndsAfterIndicatorStyle"
    BasedOn="{StaticResource IndicatorStyle}"
    TargetType="Border">

    <Style.Triggers>

      <Trigger
        Property="IsMouseOver"
        Value="True">

        <Setter
          Property="Background"
          Value="{DynamicResource EndsAfterIndicatorBrushHover}" />

      </Trigger>

      <DataTrigger
        Value="True"
        Binding="{Binding EndsAfterVisualizedDay}">

        <Setter
          Property="Background"
          Value="{StaticResource EndsAfterIndicatorBrush}" />

      </DataTrigger>

      <DataTrigger
        Value="True">

        <DataTrigger.Binding>

          <MultiBinding
            Converter="{StaticResource LogicalAnd}">

            <Binding
              Path="IsSelected" />

            <Binding
              Path="EndsAfterVisualizedDay" />

          </MultiBinding>

        </DataTrigger.Binding>

        <Setter
          Property="Background"
          Value="{StaticResource EndsAfterIndicatorBrushSelected}" />

      </DataTrigger>

    </Style.Triggers>

  </Style>

  <x:Array
    x:Key="Week"
    Type="system:DayOfWeek">
    <system:DayOfWeek>Monday</system:DayOfWeek>
    <system:DayOfWeek>Tuesday</system:DayOfWeek>
    <system:DayOfWeek>Wednesday</system:DayOfWeek>
    <system:DayOfWeek>Thursday</system:DayOfWeek>
    <system:DayOfWeek>Friday</system:DayOfWeek>
    <system:DayOfWeek>Saturday</system:DayOfWeek>
    <system:DayOfWeek>Sunday</system:DayOfWeek>
  </x:Array>

  <Style
    x:Key="VerticallyCenteredPropertyLabel"
    TargetType="Label">

    <Setter
      Property="VerticalAlignment"
      Value="Center" />

    <Setter
      Property="Margin"
      Value="0" />

    <Setter
      Property="HorizontalAlignment"
      Value="Right" />

    <Setter
      Property="HorizontalContentAlignment"
      Value="Right" />

  </Style>

  <Style
    TargetType="StackPanel">

    <Setter
      Property="Orientation"
      Value="Horizontal" />

    <Setter
      Property="Margin"
      Value="3" />

  </Style>

</ResourceDictionary>